# Generated by Django 2.2.3 on 2019-07-19 14:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AclConnectionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acl_nr', models.IntegerField(blank=True, null=True)),
                ('purpose', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=250, null=True)),
                ('src_vlan', models.CharField(blank=True, max_length=10, null=True)),
                ('src', models.CharField(blank=True, max_length=250, null=True)),
                ('src_mask', models.CharField(blank=True, max_length=50, null=True)),
                ('src_port', models.CharField(blank=True, max_length=500, null=True)),
                ('dst_vlan', models.CharField(blank=True, max_length=10, null=True)),
                ('destination', models.CharField(blank=True, max_length=250, null=True)),
                ('dst', models.CharField(blank=True, max_length=250, null=True)),
                ('dst_mask', models.CharField(blank=True, max_length=50, null=True)),
                ('application_protocol', models.CharField(blank=True, max_length=100, null=True)),
                ('proto_id', models.CharField(blank=True, max_length=20, null=True)),
                ('icmp_type', models.CharField(blank=True, max_length=25, null=True)),
                ('bidirectional', models.CharField(blank=True, max_length=1, null=True)),
                ('encrypted_base_proto', models.CharField(blank=True, max_length=100, null=True)),
                ('remark', models.CharField(blank=True, max_length=100, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acl_connection_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AclList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.CharField(blank=True, max_length=15, null=True)),
                ('src_wmask', models.CharField(blank=True, max_length=15, null=True)),
                ('src_port', models.CharField(blank=True, max_length=75, null=True)),
                ('src_operator', models.CharField(blank=True, max_length=5, null=True)),
                ('dst', models.CharField(blank=True, max_length=15, null=True)),
                ('dst_wmask', models.CharField(blank=True, max_length=15, null=True)),
                ('dst_port', models.CharField(blank=True, max_length=75, null=True)),
                ('dst_operator', models.CharField(blank=True, max_length=5, null=True)),
                ('proto_id', models.CharField(blank=True, max_length=10, null=True)),
                ('action', models.CharField(blank=True, max_length=6, null=True)),
                ('icmp_type', models.CharField(blank=True, max_length=2, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acl_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event', models.CharField(max_length=500)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('event_class', models.SmallIntegerField(blank=True, null=True)),
                ('event_type', models.SmallIntegerField(blank=True, null=True)),
                ('update_type_audit', models.SmallIntegerField(blank=True, null=True)),
                ('date', models.BigIntegerField()),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditAuto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=500)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('event_class', models.SmallIntegerField(blank=True, null=True)),
                ('event_type', models.SmallIntegerField(blank=True, null=True)),
                ('update_type_audit', models.SmallIntegerField(blank=True, null=True)),
                ('date', models.BigIntegerField()),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'audit_auto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutonomousSystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_number', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('as_client_id', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'autonomous_systems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutonomousSystemsClients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('fax', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('contact', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_cell', models.CharField(blank=True, max_length=30, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'autonomous_systems_clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categorias',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('cat', models.CharField(blank=True, max_length=60, null=True, unique=True)),
            ],
            options={
                'db_table': 'categorias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriasNet',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('cat', models.CharField(blank=True, max_length=60, null=True, unique=True)),
            ],
            options={
                'db_table': 'categorias_net',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientEntries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.SmallIntegerField()),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('fax', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_name_1', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_phone_1', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_cell_1', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_email_1', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_comment_1', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_name_2', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_phone_2', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_cell_2', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_email_2', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_comment_2', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_name_3', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_phone_3', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_cell_3', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_email_3', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_comment_3', models.CharField(blank=True, max_length=500, null=True)),
                ('default_resolver', models.CharField(blank=True, max_length=3, null=True)),
                ('dns_server_1', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_2', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_3', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_1_key_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_2_key_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_3_key_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dns_server_1_key', models.CharField(blank=True, max_length=100, null=True)),
                ('dns_server_2_key', models.CharField(blank=True, max_length=100, null=True)),
                ('dns_server_3_key', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'client_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('client', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmServer',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=40)),
                ('server_root', models.CharField(max_length=500)),
                ('cm_server_type', models.CharField(blank=True, max_length=10, null=True)),
                ('cm_server_description', models.CharField(blank=True, max_length=500, null=True)),
                ('cm_server_username', models.CharField(blank=True, max_length=100, null=True)),
                ('cm_server_password', models.CharField(blank=True, max_length=100, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cm_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smallest_bm', models.SmallIntegerField(blank=True, null=True)),
                ('max_sinc_procs', models.SmallIntegerField(blank=True, null=True)),
                ('ignorar', models.CharField(blank=True, max_length=250, null=True)),
                ('ignore_generic_auto', models.CharField(blank=True, max_length=3, null=True)),
                ('generic_dyn_host_name', models.CharField(blank=True, max_length=250, null=True)),
                ('set_sync_flag', models.CharField(blank=True, max_length=3, null=True)),
                ('dyn_ranges_only', models.CharField(blank=True, max_length=1, null=True)),
                ('ping_timeout', models.IntegerField(blank=True, null=True)),
                ('confirmation', models.CharField(blank=True, max_length=3, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
                ('smallest_bm6', models.CharField(blank=True, max_length=3, null=True)),
                ('ocs_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('ocs_database_user', models.CharField(blank=True, max_length=30, null=True)),
                ('ocs_database_name', models.CharField(blank=True, max_length=30, null=True)),
                ('ocs_database_pass', models.CharField(blank=True, max_length=30, null=True)),
                ('ocs_database_ip', models.CharField(blank=True, max_length=42, null=True)),
                ('ocs_database_port', models.CharField(blank=True, max_length=30, null=True)),
                ('ignore_dns', models.IntegerField(blank=True, null=True)),
                ('confirm_dns_delete', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custom_Host_Column_Entries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc_id', models.SmallIntegerField()),
                ('pc_id', models.SmallIntegerField()),
                ('host_id', models.IntegerField()),
                ('entry', models.CharField(max_length=10000)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'custom_host_column_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custom_Host_Columns',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('column_type_id', models.IntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'custom_host_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomNetColumnEntries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc_id', models.SmallIntegerField()),
                ('net_id', models.SmallIntegerField()),
                ('entry', models.CharField(max_length=150)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'custom_net_column_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomNetColumns',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('column_type_id', models.IntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'custom_net_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomSiteColumnEntries',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('column_id', models.SmallIntegerField()),
                ('site_id', models.SmallIntegerField()),
                ('entry', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'custom_site_column_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomSiteColumns',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'custom_site_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceCmConfig',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('host_id', models.IntegerField()),
                ('device_type_group_id', models.SmallIntegerField()),
                ('device_user_group_id', models.SmallIntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('login_pass', models.CharField(blank=True, max_length=100, null=True)),
                ('enable_pass', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('connection_proto', models.CharField(blank=True, max_length=20, null=True)),
                ('connection_proto_args', models.CharField(blank=True, max_length=20, null=True)),
                ('cm_server_id', models.CharField(blank=True, max_length=20, null=True)),
                ('save_config_changes', models.SmallIntegerField(blank=True, null=True)),
                ('last_backup_date', models.DateTimeField(blank=True, null=True)),
                ('last_backup_status', models.SmallIntegerField(blank=True, null=True)),
                ('last_backup_log', models.CharField(blank=True, max_length=40, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'device_cm_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceJobGroups',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'device_job_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceJobs',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('host_id', models.IntegerField()),
                ('job_name', models.CharField(blank=True, max_length=50, null=True)),
                ('job_group_id', models.SmallIntegerField(blank=True, null=True)),
                ('job_descr', models.CharField(blank=True, max_length=500, null=True)),
                ('job_type_id', models.SmallIntegerField(blank=True, null=True)),
                ('last_execution_date', models.DateTimeField(blank=True, null=True)),
                ('last_execution_status', models.SmallIntegerField(blank=True, null=True)),
                ('last_execution_log', models.CharField(blank=True, max_length=40, null=True)),
                ('enabled', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'device_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceKeys',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('comment', models.CharField(max_length=500)),
                ('password', models.CharField(max_length=100)),
                ('host_id', models.IntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_keys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceUserGroups',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=100)),
                ('login_pass', models.CharField(max_length=100)),
                ('enable_pass', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'device_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnsUser',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('realm', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=1500)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'dns_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnsZone',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('dyn_dns_server', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('type', models.CharField(blank=True, max_length=4, null=True)),
                ('dns_user_id', models.SmallIntegerField(blank=True, null=True)),
                ('ttl', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'dns_zone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventClasses',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('event_class', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'event_classes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventTypes',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('event_type', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'event_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GipUserGroupPerms',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('group_id', models.SmallIntegerField(blank=True, null=True)),
                ('manage_gestioip_perm', models.IntegerField()),
                ('manage_user_perm', models.IntegerField()),
                ('manage_sites_and_cats_perm', models.IntegerField()),
                ('manage_custom_columns_perm', models.IntegerField()),
                ('read_audit_perm', models.IntegerField()),
                ('clients_perm', models.CharField(max_length=100)),
                ('cat_perm', models.CharField(max_length=200)),
                ('loc_perm', models.CharField(max_length=200)),
                ('create_net_perm', models.IntegerField()),
                ('read_net_perm', models.IntegerField()),
                ('update_net_perm', models.IntegerField()),
                ('delete_net_perm', models.IntegerField()),
                ('read_host_perm', models.IntegerField()),
                ('create_host_perm', models.IntegerField()),
                ('update_host_perm', models.IntegerField()),
                ('delete_host_perm', models.IntegerField()),
                ('read_vlan_perm', models.IntegerField()),
                ('create_vlan_perm', models.IntegerField()),
                ('update_vlan_perm', models.IntegerField()),
                ('delete_vlan_perm', models.IntegerField()),
                ('read_device_config_perm', models.IntegerField()),
                ('write_device_config_perm', models.IntegerField()),
                ('administrate_cm_perm', models.IntegerField()),
                ('read_as_perm', models.IntegerField()),
                ('create_as_perm', models.IntegerField()),
                ('update_as_perm', models.IntegerField()),
                ('delete_as_perm', models.IntegerField()),
                ('read_line_perm', models.IntegerField()),
                ('create_line_perm', models.IntegerField()),
                ('update_line_perm', models.IntegerField()),
                ('delete_line_perm', models.IntegerField()),
                ('execute_update_dns_perm', models.IntegerField()),
                ('execute_update_snmp_perm', models.IntegerField()),
                ('execute_update_ping_perm', models.IntegerField()),
                ('password_management_perm', models.IntegerField()),
            ],
            options={
                'db_table': 'gip_user_group_perms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GipUserGroups',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'gip_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GipUsers',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('group_id', models.SmallIntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'gip_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=10)),
                ('default_client_id', models.CharField(max_length=150)),
                ('confirmation', models.CharField(max_length=4)),
                ('mib_dir', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_mib_dirs', models.CharField(blank=True, max_length=500, null=True)),
                ('ipv4_only', models.CharField(blank=True, max_length=3, null=True)),
                ('as_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('leased_line_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('configuration_management_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('cm_backup_dir', models.CharField(blank=True, max_length=500, null=True)),
                ('cm_licence_key', models.CharField(blank=True, max_length=500, null=True)),
                ('cm_log_dir', models.CharField(blank=True, max_length=500, null=True)),
                ('cm_xml_dir', models.CharField(blank=True, max_length=500, null=True)),
                ('auth_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('freerange_ignore_non_root', models.IntegerField()),
                ('arin_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('local_filter_enabled', models.CharField(max_length=3)),
                ('site_management_enabled', models.CharField(max_length=3)),
                ('password_management_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('dyn_dns_updates_enabled', models.CharField(blank=True, max_length=3, null=True)),
                ('acl_management_enabled', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'global_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, max_length=40, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('host_descr', models.CharField(blank=True, max_length=100, null=True)),
                ('loc', models.SmallIntegerField(blank=True, null=True)),
                ('red_num', models.IntegerField()),
                ('categoria', models.SmallIntegerField(blank=True, null=True)),
                ('int_admin', models.CharField(blank=True, max_length=1, null=True)),
                ('comentario', models.CharField(blank=True, max_length=500, null=True)),
                ('update_type', models.CharField(blank=True, max_length=5, null=True)),
                ('last_update', models.BigIntegerField(blank=True, null=True)),
                ('alive', models.IntegerField(blank=True, null=True)),
                ('last_response', models.BigIntegerField(blank=True, null=True)),
                ('range_id', models.SmallIntegerField(blank=True, null=True)),
                ('ip_version', models.CharField(blank=True, max_length=2, null=True)),
                ('dyn_dns_updates', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'host',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Llines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('loc', models.SmallIntegerField(blank=True, null=True)),
                ('ll_client_id', models.SmallIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('device', models.CharField(blank=True, max_length=500, null=True)),
                ('room', models.CharField(blank=True, max_length=500, null=True)),
                ('ad_number', models.CharField(blank=True, max_length=100, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'llines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LlinesClients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('fax', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('contact', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_cell', models.CharField(blank=True, max_length=30, null=True)),
                ('client_id', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'llines_clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('loc', models.CharField(blank=True, max_length=60, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MasterKeys',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.SmallIntegerField(blank=True, null=True)),
                ('master_key', models.CharField(max_length=100)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
                ('changed', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'master_keys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Net',
            fields=[
                ('red', models.CharField(blank=True, max_length=40, null=True)),
                ('bm', models.CharField(db_column='BM', max_length=3)),
                ('descr', models.CharField(blank=True, max_length=100, null=True)),
                ('red_num', models.AutoField(primary_key=True, serialize=False)),
                ('loc', models.SmallIntegerField()),
                ('vigilada', models.CharField(blank=True, max_length=1, null=True)),
                ('comentario', models.CharField(blank=True, max_length=500, null=True)),
                ('categoria', models.SmallIntegerField(blank=True, null=True)),
                ('ip_version', models.CharField(blank=True, max_length=2, null=True)),
                ('rootnet', models.SmallIntegerField(blank=True, null=True)),
                ('dyn_dns_updates', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'net',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_nr', models.IntegerField()),
                ('port_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'ports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PredefHostColumns',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'predef_host_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PredefNetColumns',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'predef_net_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Protocols',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol_nr', models.IntegerField()),
                ('protocol_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'protocols',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ranges',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('start_ip', models.CharField(max_length=40)),
                ('end_ip', models.CharField(max_length=40)),
                ('comentario', models.CharField(blank=True, max_length=50, null=True)),
                ('range_type', models.CharField(blank=True, max_length=2, null=True)),
                ('red_num', models.CharField(blank=True, max_length=5, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ranges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RangeType',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('range_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'range_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestmodelContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('age', models.IntegerField()),
                ('email', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'TestModel_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestmodelTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'TestModel_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestmodelTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'TestModel_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpdateType',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=15, null=True, unique=True)),
            ],
            options={
                'db_table': 'update_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpdateTypesAudit',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('update_types_audit', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'update_types_audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPasswords',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=100)),
                ('user_id', models.SmallIntegerField()),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_passwords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vlans',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('vlan_num', models.CharField(blank=True, max_length=10, null=True)),
                ('vlan_name', models.CharField(blank=True, max_length=250, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('provider_id', models.SmallIntegerField(blank=True, null=True)),
                ('bg_color', models.CharField(blank=True, max_length=20, null=True)),
                ('font_color', models.CharField(blank=True, max_length=20, null=True)),
                ('switches', models.CharField(blank=True, max_length=10000, null=True)),
                ('asso_vlan', models.SmallIntegerField(blank=True, null=True)),
                ('client_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vlans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ipam.Site')),
            ],
        ),
    ]
